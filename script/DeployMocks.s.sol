// SPDX-License-Identifier: Apache-2.0
pragma solidity ^0.8.27;

import { SingletonDeployer, console } from "erc2470-libs/script/SingletonDeployer.s.sol";

import { ERC20ImplicitMint } from "test/mocks/MockERC20.sol";
import { MockImplicitContract, MockInvalidImplicitContract } from "test/mocks/MockImplicitContract.sol";

contract DeployMocks is SingletonDeployer {

  address public mockReceiverAddress = 0xE6efBD92Ea142eF5D55C41f772C6A5441E1e17ad;

  function run() external {
    uint256 pk = vm.envUint("PRIVATE_KEY");

    bytes32 salt = bytes32(0);

    bytes memory initCode = abi.encodePacked(type(MockImplicitContract).creationCode);
    _deployIfNotAlready("MockImplicitContract", initCode, salt, pk);

    initCode = abi.encodePacked(type(MockInvalidImplicitContract).creationCode);
    _deployIfNotAlready("MockInvalidImplicitContract", initCode, salt, pk);

    initCode = abi.encodePacked(
      type(ERC20ImplicitMint).creationCode, abi.encode("ERC20ImplicitMint", "20IM", "https://example.com")
    );
    _deployIfNotAlready("ERC20ImplicitMint", initCode, salt, pk);

    initCode =
      hex"6080604052610560806100136000396000f3fe60806040526004361061003f5760003560e01c8063381ba14014610044578063ad387c8a14610092578063c0aec4d3146100a5578063ebd35e47146100ce575b600080fd5b34801561005057600080fd5b5061009061005f36600461022d565b600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b005b6100906100a0366004610256565b6100f0565b3480156100b157600080fd5b506100bb60005481565b6040519081526020015b60405180910390f35b3480156100da57600080fd5b506100e361019f565b6040516100c591906102d2565b60025460ff1615610187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f43616c6c52656365697665724d6f636b237465737443616c6c3a20524556455260448201527f545f464c41470000000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b6000839055600161019982848361040f565b50505050565b600180546101ac9061036d565b80601f01602080910402602001604051908101604052809291908181526020018280546101d89061036d565b80156102255780601f106101fa57610100808354040283529160200191610225565b820191906000526020600020905b81548152906001019060200180831161020857829003601f168201915b505050505081565b60006020828403121561023f57600080fd5b8135801515811461024f57600080fd5b9392505050565b60008060006040848603121561026b57600080fd5b83359250602084013567ffffffffffffffff8082111561028a57600080fd5b818601915086601f83011261029e57600080fd5b8135818111156102ad57600080fd5b8760208285010111156102bf57600080fd5b6020830194508093505050509250925092565b600060208083528351808285015260005b818110156102ff578581018301518582016040015282016102e3565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600181811c9082168061038157607f821691505b6020821081036103ba577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561040a57600081815260208120601f850160051c810160208610156103e75750805b601f850160051c820191505b81811015610406578281556001016103f3565b5050505b505050565b67ffffffffffffffff8311156104275761042761033e565b61043b83610435835461036d565b836103c0565b6000601f84116001811461048d57600085156104575750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355610523565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b828110156104dc57868501358255602094850194600190920191016104bc565b5086821015610517577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea2646970667358221220957421523c943545e31f979350312047b130f797407f055fb4eff4c262a692dd64736f6c63430008120033";
    address mockReceiverDeploymentAddress = _deployIfNotAlready("WALLET_CALL_RECV_MOCK", initCode, salt, pk);
    vm.etch(mockReceiverAddress, address(mockReceiverDeploymentAddress).code);
    console.log("MockReceiver deployed at:", mockReceiverAddress);
  }

}
